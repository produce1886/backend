## server config
server.address=localhost
server.port=8080

## Hibernate config
# Hibernate ddl auto (create, create-drop, update, validate, none): with "update" the database schema will be automatically updated accordingly to java entities found in the project
spring.jpa.hibernate.ddl-auto = update
spring.jpa.generate-ddl=true
spring.jpa.database=MYSQL

## Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false // 반환시 커넥션 풀이 유효한지 검사

## JDBC Connection url for the database
spring.datasource.url=jdbc:mysql://localhost/pickmeup?useUnicode=true&serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=pickmeup
spring.datasource.password=pickmeup
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

## view Resolver cache config
environment.viewResolver.cached=false

## log level config
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

spring.devtools.livereload.enabled=true

## Multipart properties
# Enable multipart uploads
spring.servlet.multipart.enabled=false

# Max file size.
spring.servlet.multipart.max-file-size=200MB

# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory

## 프로젝트내의 폴더에 업로드 파일을 설정하고 싶으면 첫번째 줄처럼
## 본인 PC의 특정 dir에 업로드 하고 싶으면 두번째 줄처럼 설정한다.
file.upload-dir=./uploads
#file.upload-dir=/Users/pang/Documents/UPLOAD_FILES